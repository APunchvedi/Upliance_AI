import { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { Container, Button, TextField, Box } from '@mui/material';
import { EditorState, convertToRaw } from 'draft-js';
import { Editor } from 'react-draft-wysiwyg';
import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';
import Counter from './components/Counter';

// const Counter = () => {
//   const [count, setCount] = useState(0);
//   const backgroundAnimation = useSpring({ backgroundColor: `rgba(0, 0, 255, ${count / 10})` });

//   return (
//     <animated.div style={{ ...backgroundAnimation, padding: '20px', textAlign: 'center' }}>
//       <h2>Counter</h2>
//       <p>{count}</p>
//       <Button onClick={() => setCount(count + 1)}>Increment</Button>
//       <Button onClick={() => setCount(count - 1)}>Decrement</Button>
//       <Button onClick={() => setCount(0)}>Reset</Button>
//     </animated.div>
//   );
// };

const UserDataForm = () => {
  const [user, setUser] = useState({ name: '', address: '', email: '', phone: '', id: '' });
  const [unsavedChanges, setUnsavedChanges] = useState(false);

  useEffect(() => {
    window.addEventListener('beforeunload', handleUnload);
    return () => window.removeEventListener('beforeunload', handleUnload);
  }, [unsavedChanges]);

  const handleUnload = (e) => {
    if (unsavedChanges) {
      e.preventDefault();
      e.returnValue = '';
    }
  };

  const handleChange = (e) => {
    setUser({ ...user, [e.target.name]: e.target.value, id: user.id || Date.now().toString() });
    setUnsavedChanges(true);
  };

  const handleSubmit = () => {
    localStorage.setItem('userData', JSON.stringify(user));
    setUnsavedChanges(false);
  };

  return (
    <Container>
      <h2>User Data Form</h2>
      <TextField name="name" label="Name" fullWidth onChange={handleChange} />
      <TextField name="address" label="Address" fullWidth onChange={handleChange} />
      <TextField name="email" label="Email" fullWidth onChange={handleChange} />
      <TextField name="phone" label="Phone" fullWidth onChange={handleChange} />
      <Button onClick={handleSubmit}>Save</Button>
    </Container>
  );
};

const RichTextEditor = () => {
  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());

  return (
    <Editor
      editorState={editorState}
      onEditorStateChange={setEditorState}
      wrapperClassName="demo-wrapper"
      editorClassName="demo-editor"
    />
  );
};

const Dashboard = () => {
  const data = [
    { name: 'Jan', users: 10 },
    { name: 'Feb', users: 20 },
    { name: 'Mar', users: 30 },
  ];
 const [count, setCount] = useState(+(localStorage.count || 0));
  return (
    <LineChart width={500} height={300} data={data}>
      <CartesianGrid strokeDasharray="3 3" />
      <XAxis dataKey="name" />
      <YAxis />
      <Tooltip />
      <Legend />
      <Line type="monotone" dataKey="users" stroke="#8884d8" />
    </LineChart>
  );
};